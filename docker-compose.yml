version: "3"

services:
  proxy:
    image: traefik:v3.0
    container_name: "traefik"
    restart: unless-stopped
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
      - "53:53/udp" # DNS
      - "2222:2222" # SSHGit
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${BACKUP_FOLDER}/letsencrypt:/letsencrypt
      - ${BACKUP_FOLDER}/logs:/logs
    command:
      - "--log.level=DEBUG"
      - "--log.filePath=/logs/traefik.log"
      # Docker configuration
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik"
      # Configure DNS entrypoint
      - "--entrypoints.adguard.address=:53/udp"
      # Configure SSHGit entrypoint
      - "--entrypoints.sshgit.address=:2222"
      # Configure entrypoint
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # SSL configuration
      - "--certificatesresolvers.letsencryptresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencryptresolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencryptresolver.acme.email=root@${DOMAIN}"
      - "--certificatesresolvers.letsencryptresolver.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53"
      - "--certificatesresolvers.letsencryptresolver.acme.storage=/letsencrypt/${DOMAIN}.json"
      # Global HTTP -> HTTPS
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      # Enable dashboard
      - "--api.dashboard=true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${TRAEFIK_AUTH}"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
    environment:
      - TZ=UTC
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_DNS_API_TOKEN}

  adguard:
    image: adguard/adguardhome
    container_name: "adguard"
    restart: unless-stopped
    volumes:
      - ${BACKUP_FOLDER}/adguard-data/work:/opt/adguardhome/work
      - ${BACKUP_FOLDER}/adguard-data/conf:/opt/adguardhome/conf
    depends_on:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.adguard.loadbalancer.server.port=3000"
      - "traefik.http.routers.adguard.rule=Host(`adguard.${DOMAIN}`)"
      - "traefik.http.routers.adguard.entrypoints=websecure"
      - "traefik.http.routers.adguard.tls.certresolver=letsencryptresolver"
      - "traefik.udp.routers.adguard.service=adguard"
      - "traefik.udp.services.adguard.loadbalancer.server.port=53"

  watchtower:
    image: containrrr/watchtower
    container_name: "watchtower"
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_NOTIFICATION_REPORT=true
      - WATCHTOWER_NOTIFICATION_URL=${WATCHTOWER_NOTIFICATION_URL}

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    volumes:
      - ${BACKUP_FOLDER}/vaultwarden-data:/data:rw
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.vaultwarden.loadbalancer.server.port=80"
      - "traefik.http.routers.vaultwarden.rule=Host(`vw.${DOMAIN}`)"
      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.tls.certresolver=letsencryptresolver"
    depends_on:
      - proxy
    environment:
      - ADMIN_TOKEN=${VW_ADMIN_TOKEN}
      - WEBSOCKET_ENABLED=true
      - SIGNUPS_ALLOWED=false
      - DOMAIN=https://vw.${DOMAIN}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_FROM=${SMTP_FROM}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SSL=${SMTP_SSL}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}

  git:
    image: gitea/gitea
    container_name: gitea
    restart: unless-stopped
    volumes:
      - ${BACKUP_FOLDER}/gitea-data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - proxy
    labels:
      - "traefik.enable=true"
      # Web
      - "traefik.http.services.gitea.loadbalancer.server.port=3000"
      - "traefik.http.routers.gitea.rule=Host(`git.${DOMAIN}`)"
      - "traefik.http.routers.gitea.entrypoints=websecure"
      - "traefik.http.routers.gitea.tls.certresolver=letsencryptresolver"
      # SSH
      - "traefik.tcp.services.giteassh.loadbalancer.server.port=22"
      - "traefik.tcp.routers.giteassh.rule=ClientIP(`192.168.0.0/16`)"
      - "traefik.tcp.routers.giteassh.entrypoints=sshgit"
      - "traefik.tcp.routers.giteassh.service=giteassh"
    environment:
      - USER_UID=1000
      - USER_GID=1000

  cftunnel:
    image: cloudflare/cloudflared:latest
    container_name: "cloudflareTunnel"
    restart: unless-stopped
    depends_on:
      - proxy
    command:
      - "tunnel"
      - "--no-autoupdate"
      - "run"
      - "--token"
      - "${CF_TUNNEL_API_TOKEN}"
