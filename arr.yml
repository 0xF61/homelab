version: "3.6"
name: homeserver
services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=protonvpn
      - OPENVPN_USER=${PROTONVPN_USER}
      - OPENVPN_PASSWORD=${PROTONVPN_PASS}
      - SERVER_COUNTRIES=Germany

  homepage:
    image: ghcr.io/gethomepage/homepage:main
    container_name: homepage
    hostname: homepage
    volumes:
      - ${BACKUP_FOLDER}/arr/config/homepage:/app/config
      - ${BACKUP_FOLDER}/arr:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: "unless-stopped"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.homepage.loadbalancer.server.port=3000"
      - "traefik.http.routers.homepage.rule=Host(`home.${DOMAIN}`)"
      - "traefik.http.routers.homepage.entrypoints=websecure"
      - "traefik.http.routers.homepage.tls.certresolver=letsencryptresolver"

  qbittorrent:
    container_name: qbittorrent
    depends_on:
      - gluetun
    network_mode: container:gluetun
    environment:
      - "QBT_WEBUI_PORT=1453"
      - "QBT_EULA=accept"
    image: "qbittorrentofficial/qbittorrent-nox:latest"
    restart: "always"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.qb.loadbalancer.server.port=1453"
      - "traefik.http.routers.qb.rule=Host(`qb.${DOMAIN}`)"
      - "traefik.http.routers.qb.entrypoints=websecure"
      - "traefik.http.routers.qb.tls.certresolver=letsencryptresolver"
    volumes:
      - "${BACKUP_FOLDER}/arr/Archive/qbt:/downloads"
      - "${BACKUP_FOLDER}/arr/config/qbittorrent:/config"

  # jellyseerr:
  #   image: fallenbagel/jellyseerr:latest
  #   container_name: jellyseerr
  #   depends_on:
  #     - jellyfin
  #   environment:
  #     - LOG_LEVEL=debug
  #     - TZ=Asia/Istanbul
  #   volumes:
  #     - ${BACKUP_FOLDER}/arr/config/jellyseer:/app/config
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.services.jellyseer.loadbalancer.server.port=5055"
  #     - "traefik.http.routers.jellyseer.rule=Host(`jellyseer.${DOMAIN}`)"
  #     - "traefik.http.routers.jellyseer.entrypoints=websecure"
  #     - "traefik.http.routers.jellyseer.tls.certresolver=letsencryptresolver"
  #   restart: unless-stopped

  # jellyfin:
  #   image: jellyfin/jellyfin
  #   container_name: jellyfin
  #   hostname: jellyfin
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.services.jelly.loadbalancer.server.port=8096"
  #     - "traefik.http.routers.jelly.rule=Host(`jelly.${DOMAIN}`)"
  #     - "traefik.http.routers.jelly.entrypoints=websecure"
  #     - "traefik.http.routers.jelly.tls.certresolver=letsencryptresolver"
  #   volumes:
  #     - ${BACKUP_FOLDER}/arr/config/jellyfin:/config
  #     - /cache/jellyfin:/cache
  #     - ${BACKUP_FOLDER}/arr/Archive/Completed:/media
  #   restart: "unless-stopped"
  #   devices:
  #     - /dev/dri:/dev/dri ##HWA Chip
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   environment:
  #     - JELLYFIN_PublishedServerUrl=http://jellyfin.${DOMAIN}

  codeserver:
    image: lscr.io/linuxserver/code-server:latest
    container_name: codeserver
    hostname: codeserver
    environment:
      - PUID=0
      - PGID=0
      - TZ=Etc/UTC
      - SUDO_PASSWORD=
      - PASSWORD=
    volumes:
      - ${BACKUP_FOLDER}/arr/config/codeserver:/config
      - ${BACKUP_FOLDER}/arr:/data
      - /code:/code
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.code.loadbalancer.server.port=8443"
      - "traefik.http.routers.code.rule=Host(`code.${DOMAIN}`)"
      - "traefik.http.routers.code.entrypoints=websecure"
      - "traefik.http.routers.code.tls.certresolver=letsencryptresolver"
    restart: unless-stopped

  radarr:
    container_name: radarr
    hostname: radarr
    image: ghcr.io/hotio/radarr
    depends_on:
      - qbittorrent
      - prowlarr
    environment:
      - TZ=Etc/UTC
    volumes:
      - ${BACKUP_FOLDER}/arr/config/radarr:/config
      - ${BACKUP_FOLDER}/arr/Archive/Completed/Movies:/data
      - ${BACKUP_FOLDER}/arr/Archive/qbt:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=letsencryptresolver"
    restart: unless-stopped

  sonarr:
    container_name: sonarr
    hostname: sonarr
    image: ghcr.io/hotio/sonarr
    depends_on:
      - qbittorrent
      - prowlarr
    environment:
      - TZ=Etc/UTC
    volumes:
      - ${BACKUP_FOLDER}/arr/config/sonarr:/config
      - ${BACKUP_FOLDER}/arr/Archive/Completed/Shows:/data
      - ${BACKUP_FOLDER}/arr/Archive/qbt:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=letsencryptresolver"
    restart: unless-stopped

  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr
    environment:
      - TZ=Etc/UTC
    volumes:
      - ${BACKUP_FOLDER}/arr/config/prowlarr:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.${DOMAIN}`)"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr.tls.certresolver=letsencryptresolver"
    restart: unless-stopped

  bazarr:
    container_name: bazarr
    hostname: bazarr
    image: ghcr.io/hotio/bazarr
    restart: unless-stopped
    depends_on:
      - radarr
      - sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Etc/UTC
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.${DOMAIN}`)"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls.certresolver=letsencryptresolver"
    volumes:
      - ${BACKUP_FOLDER}/arr/config/bazarr:/config
      - ${BACKUP_FOLDER}/arr/Archive/Completed/Shows:/shows
      - ${BACKUP_FOLDER}/arr/Archive/Completed/Movies:/movies
      - ${BACKUP_FOLDER}/arr/Archive/qbt:/downloads
